USE KitchenKontrol;
DROP TABLE IF EXISTS Temperature;
DROP TABLE IF EXISTS Cooling;
DROP TABLE IF EXISTS Cooking;
DROP TABLE IF EXISTS Thermometer;
DROP TABLE IF EXISTS Login;
DROP TABLE IF EXISTS Telephone_Number;
DROP TABLE IF EXISTS Address;
DROP TABLE IF EXISTS Checks;
DROP TABLE IF EXISTS Check_Type; 
DROP TABLE IF EXISTS Staff_Training;
DROP TABLE IF EXISTS Staff;
DROP TABLE IF EXISTS Delivery_Item;
DROP TABLE IF EXISTS Delivery;
DROP TABLE IF EXISTS Appliance;
DROP TABLE IF EXISTS Approved_Items;
DROP TABLE IF EXISTS Suppliers;

CREATE TABLE Suppliers  
        (
        Supplier_ID VARCHAR(20) NOT NULL UNIQUE,
        Business_Name VARCHAR(100),
        
        PRIMARY KEY(Supplier_ID)
        );

CREATE TABLE Approved_Items
        (
        Approved_Item_ID VARCHAR(15) NOT NULL UNIQUE,
        Item VARCHAR(40),
        Ref_Supplier_ID VARCHAR(20) NOT NULL,
        Cooked_Stat VARCHAR(10),
        Temp_Stat VARCHAR(10),

        PRIMARY KEY(Approved_Item_ID),
        FOREIGN KEY(Ref_Supplier_ID) REFERENCES Suppliers(Supplier_ID)
        );
CREATE TABLE Appliance
        (
        Appliance_Id INT UNSIGNED NOT NULL AUTO_INCREMENT,
        Cooked_Stat VARCHAR(10),
        Temp_Stat VARCHAR(10),

        PRIMARY KEY(Appliance_Id)
        );

CREATE TABLE Delivery
        (
        Invoice_Num INT NOT NULL UNIQUE,
        Ref_Supplier_ID VARCHAR(20)NOT NULL,
        Datetime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        
        PRIMARY KEY(Invoice_Num),
        FOREIGN KEY(Ref_Supplier_ID) REFERENCES Suppliers(Supplier_ID)
        );

CREATE TABLE Delivery_Item 
        (
        Delivery_Item_Id INT UNSIGNED NOT NULL AUTO_INCREMENT,
        Ref_Invoice_Num INT NOT NULL,
        Ref_Approved_Item_ID VARCHAR(15) NOT NULL,
        Quantity INT NOT NULL,
        Description VARCHAR(200),
        Used_By_Date VARCHAR(8),
        Ref_Appliance_Id INT UNSIGNED NOT NULL,
        
        PRIMARY KEY(Delivery_Item_Id),
        FOREIGN KEY(Ref_Invoice_Num) REFERENCES Delivery(Invoice_Num),
        FOREIGN KEY(Ref_Approved_Item_ID) REFERENCES Approved_Items(Approved_Item_ID),
        FOREIGN KEY(Ref_Appliance_Id) REFERENCES Appliance(Appliance_Id)
        );

CREATE TABLE Staff
        (
        Staff_id INT UNSIGNED NOT NULL AUTO_INCREMENT,
        First_Name VARCHAR(50),
        Last_Name VARCHAR(50),
        Start_Date CHAR(8),
        End_Date CHAR(8),

        PRIMARY KEY(Staff_id)
        );

CREATE TABLE Staff_Training
        (
        Ref_Staff_Id INT UNSIGNED NOT NULL,
        Date CHAR(8),
        Training_Type VARCHAR(20),
        Training_Qualification VARCHAR(20),
        Valid_duration INT,

        PRIMARY KEY(Ref_Staff_Id, Date),
        FOREIGN KEY(Ref_Staff_Id) REFERENCES Staff(Staff_id)
        );

CREATE TABLE Check_Type
        (
        Type_Id INT UNSIGNED NOT NULL AUTO_INCREMENT,
        Type VARCHAR(50),

        PRIMARY KEY(Type_Id)
        );

CREATE TABLE Checks
        (
        Ref_Type_Id INT UNSIGNED NOT NULL,
        Area VARCHAR(50),
        Comment VARCHAR(225),
        Ref_Staff_Id INT NOT NULL,
        Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

        PRIMARY KEY(Area, Date)
        );

CREATE TABLE Address
        (
        Ref_Name VARCHAR(50) NOT NULL,
        Number INT UNSIGNED,
        Street VARCHAR(50),
        City VARCHAR(50),
        County VARCHAR(50),
        Country VARCHAR(50),
        Postcode VARCHAR(8)
        );

CREATE TABLE Telephone_Number
        (
        Id VARCHAR(50) NOT NULL,
        Number VARCHAR(12),
        Type VARCHAR(10),
        
        PRIMARY KEY(Id, Number, Type)
        );

CREATE TABLE Login
        (
        Username VARCHAR(50) NOT NULL UNIQUE,
        Password VARCHAR(225) NOT NULL UNIQUE,
        Ref_Staff_Id INT UNSIGNED NOT NULL,

        PRIMARY KEY(Username),
        FOREIGN KEY(Ref_Staff_Id) REFERENCES Staff(Staff_id)
        );
CREATE TABLE Thermometer
        (
        Thermometer_Id INT UNSIGNED NOT NULL AUTO_INCREMENT,
        Purchase_Date CHAR(8) NOT NULL,

        PRIMARY KEY(Thermometer_Id)
        );

CREATE TABLE Cooking
        (
        Batch_Id INT UNSIGNED NOT NULL AUTO_INCREMENT,
        Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        Ref_Approved_Item_ID VARCHAR(15) NOT NULL,

        PRIMARY KEY(Batch_Id),
        FOREIGN KEY(Ref_Approved_Item_ID) 
        REFERENCES Approved_Items(Approved_Item_ID)
        );

CREATE TABLE Cooling
        (
        Ref_Batch_Id INT UNSIGNED NOT NULL,
        Date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        Ref_Appliance_Id INT UNSIGNED NOT NULL,
        Used_By_Date DATETIME,
        Ref_Staff_Id INT UNSIGNED NOT NULL,
        
        PRIMARY KEY(Ref_Batch_Id, Date),
        FOREIGN KEY(Ref_Batch_Id) REFERENCES Cooking(Batch_Id),
        FOREIGN KEY(Ref_Appliance_Id) REFERENCES Appliance(Appliance_Id),
        FOREIGN KEY(Ref_Staff_Id) REFERENCES Staff(Staff_id)
        );

CREATE TABLE Temperature
        (
        Temperature_Id INT UNSIGNED NOT NULL AUTO_INCREMENT,
        Item_indicator VARCHAR(50) NOT NULL,
        Ref_Staff_Id INT UNSIGNED NOT NULL,
        Datetime TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        Ref_Thermometer_Id INT UNSIGNED NOT NULL,
        Temperature DOUBLE NOT NULL,

        PRIMARY KEY(Temperature_Id),
        FOREIGN KEY(Ref_Staff_Id) REFERENCES Staff(Staff_id),
        FOREIGN KEY(Ref_Thermometer_Id) REFERENCES Thermometer(Thermometer_Id)
        );
